{"version":3,"file":"static/js/754.e7609786.chunk.js","mappings":"0NAAaA,EAAe,CACxBC,SAAU,sCACVC,IAAK,oC,UCEHC,EAAMC,EAAAA,EAAMC,OAAO,CACrBC,QAASN,EAAaC,WAKnB,SAAeM,EAAOC,GAAA,OAAAC,EAAAC,MAAC,KAADC,UAAA,CAyB7B,SAAAF,IAHC,OAGDA,GAAAG,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAzBO,SAAAC,EAAuBC,GAAc,IAAAC,EAAA,OAAAJ,EAAAA,EAAAA,KAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEblB,EAAImB,KACvB,sCACA,CACIC,OAAQvB,EAAaE,IACrBsB,UAAW,mBACXC,aAAc,qBACdC,iBAAkB,CACdC,UAAW,CACP,CACIC,eAAgBZ,OAKlC,KAAD,EAda,OAARC,EAAQE,EAAAU,KAAAV,EAAAW,OAAA,SAePb,EAASc,MAAI,OAEkB,MAFlBZ,EAAAC,KAAA,EAAAD,EAAAa,GAAAb,EAAA,SAEpBc,EAAAA,GAAMC,MAAM,mFAAiBf,EAAAa,IAASb,EAAAa,GAAA,yBAAAb,EAAAgB,OAAA,GAAApB,EAAA,mBAG7CL,MAAA,KAAAC,UAAA,CAIM,SAAeyB,EAAmBC,GAAA,OAAAC,EAAA5B,MAAC,KAADC,UAAA,CAkBxC,SAAA2B,IAAA,OAAAA,GAAA1B,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAlBM,SAAAyB,EAAmCC,GAAQ,IAAAvB,EAAA,OAAAJ,EAAAA,EAAAA,KAAAK,MAAA,SAAAuB,GAAA,cAAAA,EAAArB,KAAAqB,EAAApB,MAAA,cAAAoB,EAAArB,KAAA,EAAAqB,EAAApB,KAAA,EAEnBlB,EAAImB,KACvB,wBACA,CACIC,OAAQvB,EAAaE,IACrBsB,UAAW,UACXC,aAAc,gBACdC,iBAAkB,CACdgB,SAAUF,KAGpB,KAAD,EAVa,OAARvB,EAAQwB,EAAAZ,KAAAY,EAAAX,OAAA,SAWPb,EAASc,MAAI,OAEkB,MAFlBU,EAAArB,KAAA,EAAAqB,EAAAT,GAAAS,EAAA,SAEpBR,EAAAA,GAAMC,MAAM,mFAAiBO,EAAAT,IAASS,EAAAT,GAAA,yBAAAS,EAAAN,OAAA,GAAAI,EAAA,mBAG7C7B,MAAA,KAAAC,UAAA,CAEM,SAAegC,EAAuBC,EAAAC,EAAAC,GAAA,OAAAC,EAAArC,MAAC,KAADC,UAAA,CAoB5C,SAAAoC,IAAA,OAAAA,GAAAnC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MApBM,SAAAkC,EAAuCR,EAAUS,EAAMC,GAAY,IAAAjC,EAAA,OAAAJ,EAAAA,EAAAA,KAAAK,MAAA,SAAAiC,GAAA,cAAAA,EAAA/B,KAAA+B,EAAA9B,MAAA,cAAA8B,EAAA/B,KAAA,EAAA+B,EAAA9B,KAAA,EAE3ClB,EAAImB,KACvB,wBACA,CACIC,OAAQvB,EAAaE,IACrBsB,UAAW,UACXC,aAAc,gBACdC,iBAAkB,CACdgB,SAAUF,EACVY,MAAOF,EACPG,KAAMJ,KAGhB,KAAD,EAZa,OAARhC,EAAQkC,EAAAtB,KAAAsB,EAAArB,OAAA,SAaPb,EAASc,MAAI,OAEkB,MAFlBoB,EAAA/B,KAAA,EAAA+B,EAAAnB,GAAAmB,EAAA,SAEpBlB,EAAAA,GAAMC,MAAM,mFAAiBiB,EAAAnB,IAASmB,EAAAnB,GAAA,yBAAAmB,EAAAhB,OAAA,GAAAa,EAAA,mBAG7CtC,MAAA,KAAAC,UAAA,C,wMC7DK2C,GACJC,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CACFC,UAAU,OACVC,GAAI,CAAEC,QAAS,eAAgBC,GAAI,MAAOC,UAAW,cAAeC,SACrE,WAKUC,EAAa,SAAHC,GAA+B,IAAzBC,EAAUD,EAAVC,WAC3B,OACEC,EAAAA,EAAAA,MAACV,EAAAA,EAAG,CACFC,UAAU,MACVC,GAAI,CAAES,SAAU,QAASC,GAAI,OAAQC,UAAW,SAAUP,SAAA,EAE1DI,EAAAA,EAAAA,MAACI,EAAAA,EAAU,CAACZ,GAAI,CAAEa,SAAU,IAAMC,QAAQ,YAAWV,SAAA,CAAC,0CAC5CP,EAAAA,EAAAA,KAAA,QAAMkB,MAAO,CAAEC,MAAO,SAAUZ,SAAEG,EAAW,GAAGU,aAE1DT,EAAAA,EAAAA,MAACU,EAAAA,EAAW,CAAClB,GAAI,CAAEmB,gBAAiB,UAAWT,GAAI,QAASN,SAAA,EAC1DP,EAAAA,EAAAA,KAACe,EAAAA,EAAU,CAACE,QAAQ,KAAKf,UAAU,SACnCS,EAAAA,EAAAA,MAACI,EAAAA,EAAU,CAACZ,GAAI,CAAEoB,GAAI,KAAOJ,MAAM,iBAAgBZ,SAAA,CAAC,+FAEjDR,EACAW,EAAW,GAAGc,WACdzB,MAEHY,EAAAA,EAAAA,MAACI,EAAAA,EAAU,CAACE,QAAQ,QAAOV,SAAA,CAAC,sGACNG,EAAW,GAAGe,mBAEC,KAApCf,EAAW,GAAGgB,mBACbf,EAAAA,EAAAA,MAACI,EAAAA,EAAU,CAACE,QAAQ,QAAOV,SAAA,CAAC,gGACPG,EAAW,GAAGiB,sBAEjC,SAGNhB,EAAAA,EAAAA,MAACU,EAAAA,EAAW,CAAClB,GAAI,CAAEmB,gBAAiB,UAAWT,GAAI,QAASN,SAAA,EAC1DP,EAAAA,EAAAA,KAACe,EAAAA,EAAU,CAACE,QAAQ,KAAKf,UAAU,SACnCS,EAAAA,EAAAA,MAACI,EAAAA,EAAU,CAACZ,GAAI,CAAEoB,GAAI,KAAOJ,MAAM,iBAAgBZ,SAAA,CAAC,0FAChCR,EACjBW,EAAW,GAAGkB,cACd7B,MAEHY,EAAAA,EAAAA,MAACI,EAAAA,EAAU,CAACE,QAAQ,QAAOV,SAAA,CAAC,sGACNG,EAAW,GAAGmB,sBAEC,KAApCnB,EAAW,GAAGgB,mBACb1B,EAAAA,EAAAA,KAACe,EAAAA,EAAU,CAACE,QAAQ,QAAOV,UACzBI,EAAAA,EAAAA,MAAA,KAAAJ,SAAA,CAAG,8EAAgBG,EAAW,GAAGgB,uBAEjC,UAIZ,E,6JC9CaI,EAAU,SAAHrB,GAAiD,IAA3CsB,EAAetB,EAAfsB,gBAAiBC,EAAWvB,EAAXuB,YACnCC,GAAUC,EAAAA,EAAAA,KAAY,SAACC,GAAgB,OAAKA,EAAMC,IAAIC,KAAK,IAC3DC,GAAWC,EAAAA,EAAAA,MAEXC,GAAYC,EAAAA,EAAAA,GAAc,uBAC1BC,GAAQD,EAAAA,EAAAA,GAAc,sBAE5B,OACEzC,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CACFC,UAAU,MACVC,GAAI,CACFwC,GAAI,OACJC,GAAI,OACJC,UAAW,OACXC,UAAW,QACXvC,UAEFP,EAAAA,EAAAA,KAAC+C,EAAAA,EAAI,CAAC5C,GAAI,CAAE6C,OAAQ,SAAUzC,UAC5BP,EAAAA,EAAAA,KAACiD,EAAAA,GAAI,CACHC,WAAS,EACTC,QAAS,EACThD,GAAIqC,EAAY,CAAEY,cAAe,UAAa,CAAC,EAAE7C,SAEhD0B,EACGA,EAAQoB,KAAI,SAACC,GACX,OACEtD,EAAAA,EAAAA,KAACiD,EAAAA,GAAI,CAACM,MAAI,EAACC,GAAIhB,EAAY,GAAK,EAAEjC,UAChCI,EAAAA,EAAAA,MAAC8C,EAAAA,GAAQ,CACPtD,GACEuC,EACI,CACEM,OAAQ,UACRU,QAAS,SACTpC,gBAAiB,UACjBqC,MAAO,SAET,CACEX,OAAQ,OACRU,QAAS,OACTpC,gBAAiB,UACjBqC,MAAO,SAEdpD,SAAA,EAGDP,EAAAA,EAAAA,KAAC4D,EAAAA,EAAc,CAAArD,UACbP,EAAAA,EAAAA,KAAC6D,EAAAA,EAAM,CAAC1D,GAAI,CAAE2D,GAAI,QAASvD,UACzBP,EAAAA,EAAAA,KAAC+D,EAAAA,EAAU,SAGf/D,EAAAA,EAAAA,KAACgE,EAAAA,EAAY,CACXC,QAASX,EAAOlB,IAChB8B,QAAS,WACPnC,EAAgBuB,EAAOlB,KACvBJ,GACF,EACA7B,GAAI,CAAEgE,OAAQ,cAEhBnE,EAAAA,EAAAA,KAACoE,EAAAA,EAAU,CACT,aAAW,SACXF,QAAS,kBAAM5B,GAAS+B,EAAAA,EAAAA,IAAUf,EAAOgB,IAAI,EAAC/D,UAE9CP,EAAAA,EAAAA,KAACuE,EAAAA,EAAU,QAnBRjB,EAAOgB,KAjBwBhB,EAAOgB,GAyCnD,IACA,UAKd,ECqHA,EAlLa,WACX,IAAAE,GAAoCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAzCI,EAAUF,EAAA,GAAEG,EAAaH,EAAA,GAChCI,EAA8BC,EAAAA,SAAmC,MAAKC,GAAAL,EAAAA,EAAAA,GAAAG,EAAA,GAA/DG,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAC1BG,GAA0BV,EAAAA,EAAAA,WAAS,GAAMW,GAAAT,EAAAA,EAAAA,GAAAQ,EAAA,GAAlCxG,EAAKyG,EAAA,GAAEC,EAAQD,EAAA,GACtBE,GAAmCb,EAAAA,EAAAA,UAAyB,IAAGc,GAAAZ,EAAAA,EAAAA,GAAAW,EAAA,GAAxD5E,EAAU6E,EAAA,GAAEC,EAAYD,EAAA,GACzBtD,GAAUC,EAAAA,EAAAA,KAAY,SAACC,GAAgB,OAAKA,EAAMC,IAAIC,KAAK,IAC3DC,GAAWC,EAAAA,EAAAA,MAEXG,GAAQD,EAAAA,EAAAA,GAAc,sBACtBgD,GAAahD,EAAAA,EAAAA,GAAc,sBAY3BV,EAAkB,SAACK,GACvByC,EAAczC,EAEhB,GAGAsD,EAAAA,EAAAA,YAAU,WACR,GAhBmB,SAACd,GAEpB,MADyB,WAENe,KAAKf,KACC,KAAtBA,EAAWgB,QAAuC,KAAtBhB,EAAWgB,OAE5C,CAUMC,CAAajB,EAAWkB,YAAa,CACvC,IAAMC,EAAS,eAAAtF,GAAApD,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAwI,EAAA,OAAA1I,EAAAA,EAAAA,KAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAEad,EAAAA,EAAAA,IAAQ4H,GAAY,KAAD,GAAxCoB,EAAYpI,EAAAU,MACDE,KAAKoH,OAAS,GAC7BJ,EAAaQ,EAAaxH,MAC1B8D,GAAS2D,EAAAA,EAAAA,IAAU,CAAE3B,IAAI4B,EAAAA,EAAAA,MAAU9D,IAAKwC,MAExClG,EAAAA,GAAMC,MAAM,6GACbf,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAa,GAAAb,EAAA,SAEDc,EAAAA,GAAMC,MAAM,mFAAkB,yBAAAf,EAAAgB,OAAA,GAAApB,EAAA,kBAEjC,kBAZc,OAAAiD,EAAAtD,MAAA,KAAAC,UAAA,KAaf2I,GACF,CACF,GAAG,CAACnB,EAAYtC,IAGhB,IAYM6D,EAAOC,QAAQnB,GAIfjD,EAAc,WAClBkD,EAAW,KACb,EAEA,OACElF,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CAACC,UAAU,UAAUC,GAAI,CAAEkG,GAAI,OAAQC,GAAI,QAAS/F,UACtDP,EAAAA,EAAAA,KAACuG,EAAAA,EAAS,CAACC,OAAK,EAAAjG,UACdI,EAAAA,EAAAA,MAACV,EAAAA,EAAG,CAACC,UAAU,MAAMC,GAAI,CAAEC,QAAS,OAAQqG,SAAU,YAAalG,SAAA,EACjEI,EAAAA,EAAAA,MAACV,EAAAA,EAAG,CAACC,UAAU,MAAMwG,UAAWhE,EAAQ,oBAAsB,GAAGnC,SAAA,EAC/DI,EAAAA,EAAAA,MAACV,EAAAA,EAAG,CACFC,UAAU,MACVwG,UAAU,uBACVvG,GACEuC,EACI,CACEiB,MAAO,QACPgD,OAAQ,SAEV,CACEhD,MAAO,QACPgD,OAAQ,SAEfpG,SAAA,EAEDP,EAAAA,EAAAA,KAAC4G,EAAAA,EAAS,CACRtC,GAAG,iBACHuC,MAAM,4EACN5F,QAAQ,WACRoB,MAAOuC,EACPkC,SA7CY,SAACC,GACzB,IAAMC,EAAWD,EAAME,OAAO5E,MAEzB,QAAQsD,KAAKqB,IAGhB3B,GAAS,GACTR,EAAcmC,IAHd3B,GAAS,EAKb,EAqCc1G,MAAOA,EACPuI,WAAYvI,EAAQ,iHAAyB,GAC7C+H,UAAU,kBACVvG,GACEuC,EACI,CACEyE,KAAM,MACNxD,MAAO,SAET,CACEwD,KAAM,OAGdC,WAAY,CACVC,QAAS,aAGbrH,EAAAA,EAAAA,KAACoE,EAAAA,EAAU,CACTjE,GACEuC,EACI,CACE+D,SAAU,WACVa,IAAK,MACLH,KAAM,MACN7G,UAAW,yBAEb,CACEmG,SAAU,WACVa,IAAK,MACLH,KAAM,MACN7G,UAAW,yBAElBC,UAEDP,EAAAA,EAAAA,KAACuH,EAAAA,EAAM,UAGXvH,EAAAA,EAAAA,KAAA,OAAAO,SACyB,IAAtBG,EAAWkF,QACV5F,EAAAA,EAAAA,KAACQ,EAAU,CAACE,WAAYA,KAExBV,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CAACC,UAAU,MAAMC,GAAI,CAAEW,UAAW,gBAI3C2E,GACC9E,EAAAA,EAAAA,MAACV,EAAAA,EAAG,CAACC,UAAU,MAAMwG,UAAU,6BAA4BnG,SAAA,EACzDP,EAAAA,EAAAA,KAACwH,EAAAA,EAAM,CACL,gBAAerB,EAAO,iBAAcsB,EACpC,gBAAc,OACdvD,QAnFY,SAAC6C,GACzB7B,EAAW6B,EAAMW,cACnB,EAkFczG,QAAQ,YACR0G,WAAW3H,EAAAA,EAAAA,KAAC4H,EAAAA,EAAQ,IACpBlB,UAAU,+BAEZ1G,EAAAA,EAAAA,KAAC6H,EAAAA,EAAI,CACHvD,GAAG,OACHwD,SAAU7C,EACVkB,KAAMC,QAAQnB,GACd8C,QAAS/F,EAAYzB,SAED,IAAnB0B,EAAQ2D,QACP5F,EAAAA,EAAAA,KAAC8B,EAAO,CACNC,gBAAiBA,EACjBC,YAAaA,KAGfhC,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CAACC,UAAU,MAAMwG,UAAU,oBAAmBnG,SAAC,kGAOzDP,EAAAA,EAAAA,KAAC8B,EAAO,CACNC,gBAAiBA,EACjBC,YAAaA,UAO3B,C","sources":["constants/baseUrl.js","api/Api.js","components/statusInfo/StatusInfo.tsx","components/listTTN/ListTtn.tsx","pages/Home.tsx"],"sourcesContent":["export const constantsApi = {\r\n    BASE_URL: 'https://api.novaposhta.ua/v2.0/json',\r\n    KEY: '6de779f238efba7722245783c629122b',\r\n};","import axios from 'axios';\r\nimport { constantsApi } from '../constants/baseUrl';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst api = axios.create({\r\n    baseURL: constantsApi.BASE_URL,\r\n});\r\n\r\n\r\n// запит за ТТН\r\nexport async function getInfo(trackingNumber) {\r\n    try {\r\n        const response = await api.post(\r\n            'TrackingDocument/getStatusDocuments',\r\n            {\r\n                apiKey: constantsApi.KEY,\r\n                modelName: 'TrackingDocument',\r\n                calledMethod: 'getStatusDocuments',\r\n                methodProperties: {\r\n                    Documents: [\r\n                        {\r\n                            DocumentNumber: trackingNumber,\r\n                        },\r\n                    ],\r\n                }\r\n            }\r\n        );\r\n        return response.data;\r\n    } catch (error) {\r\n        toast.error('Помилка запиту:', error);\r\n        throw error;\r\n    }\r\n}\r\n\r\n\r\n//запит за відділенями у місті\r\nexport async function getWarehousesInCity(cityName) {\r\n    try {\r\n        const response = await api.post(\r\n            'Address/getWarehouses',\r\n            {\r\n                apiKey: constantsApi.KEY,\r\n                modelName: 'Address',\r\n                calledMethod: 'getWarehouses',\r\n                methodProperties: {\r\n                    CityName: cityName,\r\n                },\r\n            }\r\n        );\r\n        return response.data;\r\n    } catch (error) {\r\n        toast.error('Помилка запиту:', error);\r\n        throw error;\r\n    }\r\n}\r\n\r\nexport async function getWarehousesInCityPage(cityName, page, itemsPerPage) {\r\n    try {\r\n        const response = await api.post(\r\n            'Address/getWarehouses',\r\n            {\r\n                apiKey: constantsApi.KEY,\r\n                modelName: 'Address',\r\n                calledMethod: 'getWarehouses',\r\n                methodProperties: {\r\n                    CityName: cityName,\r\n                    Limit: itemsPerPage,\r\n                    Page: page,\r\n                },\r\n            }\r\n        );\r\n        return response.data;\r\n    } catch (error) {\r\n        toast.error('Помилка запиту:', error);\r\n        throw error;\r\n    }\r\n}\r\n\r\n\r\n\r\n","import { CardContent, Typography } from \"@mui/material\";\r\nimport Box from \"@mui/material/Box\";\r\n\r\ninterface Props {\r\n  resultInfo: {\r\n    Status: string;\r\n    CitySender: string;\r\n    WarehouseSender: string;\r\n    ActualDeliveryDate: string;\r\n    CityRecipient: string;\r\n    WarehouseRecipient: string;\r\n    RecipientDateTime: string;\r\n  }[];\r\n}\r\n\r\nconst bull = (\r\n  <Box\r\n    component=\"span\"\r\n    sx={{ display: \"inline-block\", mx: \"2px\", transform: \"scale(0.8)\" }}\r\n  >\r\n    •\r\n  </Box>\r\n);\r\n\r\nexport const StatusInfo = ({ resultInfo }: Props) => {\r\n  return (\r\n    <Box\r\n      component=\"div\"\r\n      sx={{ maxWidth: \"500px\", mt: \"25px\", minHeight: \"360px\" }}\r\n    >\r\n      <Typography sx={{ fontSize: 18 }} variant=\"subtitle1\">\r\n        Статус: <span style={{ color: \"green\" }}>{resultInfo[0].Status}</span>\r\n      </Typography>\r\n      <CardContent sx={{ backgroundColor: \"#ff3d3b\", mt: \"25px\" }}>\r\n        <Typography variant=\"h5\" component=\"div\"></Typography>\r\n        <Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\r\n          Місто відправник:\r\n          {bull}\r\n          {resultInfo[0].CitySender}\r\n          {bull}\r\n        </Typography>\r\n        <Typography variant=\"body2\">\r\n          Адреса відділення: {resultInfo[0].WarehouseSender}\r\n        </Typography>\r\n        {resultInfo[0].RecipientDateTime !== \"\" ? (\r\n          <Typography variant=\"body2\">\r\n            Час відправлення: {resultInfo[0].ActualDeliveryDate}\r\n          </Typography>\r\n        ) : null}\r\n      </CardContent>\r\n\r\n      <CardContent sx={{ backgroundColor: \"#ff3d3b\", mt: \"25px\" }}>\r\n        <Typography variant=\"h5\" component=\"div\"></Typography>\r\n        <Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\r\n          Місто отримання: {bull}\r\n          {resultInfo[0].CityRecipient}\r\n          {bull}\r\n        </Typography>\r\n        <Typography variant=\"body2\">\r\n          Адреса відділення: {resultInfo[0].WarehouseRecipient}\r\n        </Typography>\r\n        {resultInfo[0].RecipientDateTime !== \"\" ? (\r\n          <Typography variant=\"body2\">\r\n            <p>Час отримання: {resultInfo[0].RecipientDateTime}</p>\r\n          </Typography>\r\n        ) : null}\r\n      </CardContent>\r\n    </Box>\r\n  );\r\n};\r\n","import DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport FolderIcon from \"@mui/icons-material/Folder\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { removeTtn } from \"../../features/ttn/ttnSlice\";\r\nimport type { RootState } from \"../../store/store\";\r\n\r\nimport {\r\n  Grid,\r\n  useMediaQuery,\r\n  ListItemText,\r\n  Avatar,\r\n  ListItemAvatar,\r\n  ListItem,\r\n  List,\r\n  IconButton,\r\n  Box,\r\n} from \"@mui/material\";\r\n\r\ninterface Props {\r\n  handleItemClick: (ttn: string) => void;\r\n  handleClose: () => void;\r\n}\r\n\r\nexport const ListTtn = ({ handleItemClick, handleClose }: Props) => {\r\n  const listTtn = useSelector((state: RootState) => state.ttn.value);\r\n  const dispatch = useDispatch();\r\n\r\n  const isDesctop = useMediaQuery(\"(max-width: 1199px)\");\r\n  const isMob = useMediaQuery(\"(max-width: 525px)\");\r\n\r\n  return (\r\n    <Box\r\n      component=\"div\"\r\n      sx={{\r\n        pl: \"25px\",\r\n        pr: \"25px\",\r\n        maxHeight: \"80vh\",\r\n        overflowY: \"auto\",\r\n      }}\r\n    >\r\n      <List sx={{ margin: \"-20px\" }}>\r\n        <Grid\r\n          container\r\n          spacing={2}\r\n          sx={isDesctop ? { flexDirection: \"column\" } : {}}\r\n        >\r\n          {listTtn\r\n            ? listTtn.map((oneTtn) => {\r\n                return (\r\n                  <Grid item xs={isDesctop ? 12 : 6} key={oneTtn.id}>\r\n                    <ListItem\r\n                      sx={\r\n                        isMob\r\n                          ? {\r\n                              margin: \" 10px 0\",\r\n                              padding: \"10px 0\",\r\n                              backgroundColor: \"#ff3d3b\",\r\n                              width: \"260px\",\r\n                            }\r\n                          : {\r\n                              margin: \"15px\",\r\n                              padding: \"20px\",\r\n                              backgroundColor: \"#ff3d3b\",\r\n                              width: \"280px\",\r\n                            }\r\n                      }\r\n                      key={oneTtn.id}\r\n                    >\r\n                      <ListItemAvatar>\r\n                        <Avatar sx={{ mr: \"25px\" }}>\r\n                          <FolderIcon />\r\n                        </Avatar>\r\n                      </ListItemAvatar>\r\n                      <ListItemText\r\n                        primary={oneTtn.ttn}\r\n                        onClick={() => {\r\n                          handleItemClick(oneTtn.ttn);\r\n                          handleClose();\r\n                        }}\r\n                        sx={{ cursor: \"pointer\" }}\r\n                      />\r\n                      <IconButton\r\n                        aria-label=\"delete\"\r\n                        onClick={() => dispatch(removeTtn(oneTtn.id))}\r\n                      >\r\n                        <DeleteIcon />\r\n                      </IconButton>\r\n                    </ListItem>\r\n                  </Grid>\r\n                );\r\n              })\r\n            : null}\r\n        </Grid>\r\n      </List>\r\n    </Box>\r\n  );\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { nanoid } from \"nanoid\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\nimport { getInfo } from \"../api/Api\";\r\nimport { addNewTtn } from \"../features/ttn/ttnSlice\";\r\nimport { StatusInfo } from \"../components/statusInfo/StatusInfo\";\r\nimport { Search } from \"@mui/icons-material\";\r\nimport \"./Home.css\";\r\nimport ListIcon from \"@mui/icons-material/List\";\r\n\r\nimport {\r\n  useMediaQuery,\r\n  IconButton,\r\n  Box,\r\n  Container,\r\n  TextField,\r\n  Button,\r\n  Menu,\r\n} from \"@mui/material\";\r\n\r\nimport { ListTtn } from \"../components/listTTN/ListTtn\";\r\nimport { RootState } from \"../store/store\";\r\n\r\ninterface DeliveryInfo {\r\n  RecipientDateTime: string;\r\n  ActualDeliveryDate: string;\r\n  Status: string;\r\n  WarehouseSender: string;\r\n  CitySender: string;\r\n  CityRecipient: string;\r\n  WarehouseRecipient: string;\r\n}\r\n\r\nconst Home = () => {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const [menuTtn, setMenuTtn] = React.useState<null | HTMLElement>(null);\r\n  const [error, setError] = useState(false);\r\n  const [resultInfo, setResulInfo] = useState<DeliveryInfo[]>([]);\r\n  const listTtn = useSelector((state: RootState) => state.ttn.value);\r\n  const dispatch = useDispatch();\r\n\r\n  const isMob = useMediaQuery(\"(max-width: 524px)\");\r\n  const isTableMax = useMediaQuery(\"(max-width: 899px)\");\r\n\r\n  // проверка input\r\n  const isValidInput = (inputValue: string): boolean => {\r\n    const onlyNumbersRegex = /^[0-9]+$/;\r\n    return (\r\n      onlyNumbersRegex.test(inputValue) &&\r\n      (inputValue.length === 11 || inputValue.length === 14)\r\n    );\r\n  };\r\n\r\n  ///Обработка клика по списку ТТН\r\n  const handleItemClick = (ttn: string) => {\r\n    setInputValue(ttn);\r\n    // handleButtonClick();\r\n  };\r\n\r\n  //запрос по ТТН или Накладной\r\n  useEffect(() => {\r\n    if (isValidInput(inputValue.toString())) {\r\n      const fetchData = async () => {\r\n        try {\r\n          const resultSender = await getInfo(inputValue);\r\n          if (resultSender.data.length > 0) {\r\n            setResulInfo(resultSender.data);\r\n            dispatch(addNewTtn({ id: nanoid(), ttn: inputValue }));\r\n          } else {\r\n            toast.error(\"Не має такой посилки\");\r\n          }\r\n        } catch (error) {\r\n          toast.error(\"Помилка запиту\");\r\n        }\r\n      };\r\n      fetchData();\r\n    }\r\n  }, [inputValue, dispatch]);\r\n\r\n  //инпут + валидация\r\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const newValue = event.target.value;\r\n\r\n    if (!/^\\d*$/.test(newValue)) {\r\n      setError(true);\r\n    } else {\r\n      setError(false);\r\n      setInputValue(newValue);\r\n    }\r\n  };\r\n\r\n  //функций меню с ттн\r\n  const open = Boolean(menuTtn);\r\n  const handleInMenuClick = (event: React.MouseEvent<HTMLElement>) => {\r\n    setMenuTtn(event.currentTarget);\r\n  };\r\n  const handleClose = () => {\r\n    setMenuTtn(null);\r\n  };\r\n\r\n  return (\r\n    <Box component=\"section\" sx={{ pt: \"24px\", pb: \"24px\" }}>\r\n      <Container fixed>\r\n        <Box component=\"div\" sx={{ display: \"flex\", position: \"relative\" }}>\r\n          <Box component=\"div\" className={isMob ? \"homePage__wrapper\" : \"\"}>\r\n            <Box\r\n              component=\"div\"\r\n              className=\"homePage__input--img\"\r\n              sx={\r\n                isMob\r\n                  ? {\r\n                      width: \"288px\",\r\n                      height: \"200px\",\r\n                    }\r\n                  : {\r\n                      width: \"500px\",\r\n                      height: \"300px\",\r\n                    }\r\n              }\r\n            >\r\n              <TextField\r\n                id=\"standard-basic\"\r\n                label=\"Введіть номер\"\r\n                variant=\"standard\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n                error={error}\r\n                helperText={error ? \"Введите только цифры\" : \"\"}\r\n                className=\"homePage__input\"\r\n                sx={\r\n                  isMob\r\n                    ? {\r\n                        left: \"40%\",\r\n                        width: \"150px\",\r\n                      }\r\n                    : {\r\n                        left: \"30%\",\r\n                      }\r\n                }\r\n                inputProps={{\r\n                  pattern: \"[0-9]*\",\r\n                }}\r\n              />\r\n              <IconButton\r\n                sx={\r\n                  isMob\r\n                    ? {\r\n                        position: \"absolute\",\r\n                        top: \"54%\",\r\n                        left: \"63%\",\r\n                        transform: \"translate(-50%, -50%)\",\r\n                      }\r\n                    : {\r\n                        position: \"absolute\",\r\n                        top: \"53%\",\r\n                        left: \"50%\",\r\n                        transform: \"translate(-50%, -50%)\",\r\n                      }\r\n                }\r\n              >\r\n                <Search />\r\n              </IconButton>\r\n            </Box>\r\n            <div>\r\n              {resultInfo.length !== 0 ? (\r\n                <StatusInfo resultInfo={resultInfo} />\r\n              ) : (\r\n                <Box component=\"div\" sx={{ minHeight: \"360px\" }} />\r\n              )}\r\n            </div>\r\n          </Box>\r\n          {isTableMax ? (\r\n            <Box component=\"div\" className=\"homePage__wrapper__listTtn\">\r\n              <Button\r\n                aria-controls={open ? \"fade-menu\" : undefined}\r\n                aria-haspopup=\"true\"\r\n                onClick={handleInMenuClick}\r\n                variant=\"contained\"\r\n                startIcon={<ListIcon />}\r\n                className=\"homePage__button--listTtn\"\r\n              ></Button>\r\n              <Menu\r\n                id=\"menu\"\r\n                anchorEl={menuTtn}\r\n                open={Boolean(menuTtn)}\r\n                onClose={handleClose}\r\n              >\r\n                {listTtn.length !== 0 ? (\r\n                  <ListTtn\r\n                    handleItemClick={handleItemClick}\r\n                    handleClose={handleClose}\r\n                  />\r\n                ) : (\r\n                  <Box component=\"div\" className=\"homePage__mobList\">\r\n                    Ще не має посилок\r\n                  </Box>\r\n                )}\r\n              </Menu>\r\n            </Box>\r\n          ) : (\r\n            <ListTtn\r\n              handleItemClick={handleItemClick}\r\n              handleClose={handleClose}\r\n            />\r\n          )}\r\n        </Box>\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"names":["constantsApi","BASE_URL","KEY","api","axios","create","baseURL","getInfo","_x","_getInfo","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","trackingNumber","response","wrap","_context","prev","next","post","apiKey","modelName","calledMethod","methodProperties","Documents","DocumentNumber","sent","abrupt","data","t0","toast","error","stop","getWarehousesInCity","_x2","_getWarehousesInCity","_callee2","cityName","_context2","CityName","getWarehousesInCityPage","_x3","_x4","_x5","_getWarehousesInCityPage","_callee3","page","itemsPerPage","_context3","Limit","Page","bull","_jsx","Box","component","sx","display","mx","transform","children","StatusInfo","_ref","resultInfo","_jsxs","maxWidth","mt","minHeight","Typography","fontSize","variant","style","color","Status","CardContent","backgroundColor","mb","CitySender","WarehouseSender","RecipientDateTime","ActualDeliveryDate","CityRecipient","WarehouseRecipient","ListTtn","handleItemClick","handleClose","listTtn","useSelector","state","ttn","value","dispatch","useDispatch","isDesctop","useMediaQuery","isMob","pl","pr","maxHeight","overflowY","List","margin","Grid","container","spacing","flexDirection","map","oneTtn","item","xs","ListItem","padding","width","ListItemAvatar","Avatar","mr","FolderIcon","ListItemText","primary","onClick","cursor","IconButton","removeTtn","id","DeleteIcon","_useState","useState","_useState2","_slicedToArray","inputValue","setInputValue","_React$useState","React","_React$useState2","menuTtn","setMenuTtn","_useState3","_useState4","setError","_useState5","_useState6","setResulInfo","isTableMax","useEffect","test","length","isValidInput","toString","fetchData","resultSender","addNewTtn","nanoid","open","Boolean","pt","pb","Container","fixed","position","className","height","TextField","label","onChange","event","newValue","target","helperText","left","inputProps","pattern","top","Search","Button","undefined","currentTarget","startIcon","ListIcon","Menu","anchorEl","onClose"],"sourceRoot":""}